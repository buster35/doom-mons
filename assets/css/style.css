* {
  box-sizing: border-box;
  font-size: 62.5%;
}

header {
  display: flex;
  font-size: 8rem;
  font-weight: bold;
  color: #fff;
  padding: 40px;
  text-align: center;
  justify-content: center;
  background-image: linear-gradient(to left top, #022655, #dededf);
}

nav {
  display: flex;
  font-size: 4rem;
  justify-content: space-evenly;
  background-color: #d8a47f;
}

body {
  font-family: Arial;
  margin: 0;
}

body p {
  font-size: 1.7rem;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 60px;
  text-align: center;
}

aside h2 {
  font-size: 2.75rem;
}

aside img {
  border-radius: 50%;
  margin: 20px;
}

footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do?
It is used to align the flex items; in our case, the product cards 
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
It is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties 
What is it doing here?
We are making the product card not growable, not shrinkable, and with an initial length of 400px 
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
  margin: 5px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

.first-card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 1000px;
  margin: 5px;
}

.first-card header {
  padding: 20px;
}

.first-card p {
  text-align: center;
}

.first-card img {
  width: 95%;
}

/* 
What does the flex-direction property define?
It defines in which direction the container wants to stack the flex items
What is it doing here? 
We are telling the main body and navbar to stack vertically in a column
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
